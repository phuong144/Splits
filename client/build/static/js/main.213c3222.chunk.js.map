{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/navbar.component.js","components/dashboard/workout.component.js","components/dashboard/change.component.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Navbar","className","to","style","fontFamily","Component","Landing","height","justifyContent","width","borderRadius","letterSpacing","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","nextProps","this","push","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Workout","split","workoutId","workout","isLoading","console","log","_isMounted","status","_id","Date","getDay","textAlign","JSON","stringify","Change","isMounted","handleClick","bind","display","alignItems","onClick","href","Dashboard","onLogoutClick","exact","path","marginLeft","marginRight","jwtToken","currentTime","now","exp","location","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.213c3222.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n        compose\n    )\n  );\nexport default store;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 brand-logo center black-text\"\n            >\n              Splits\n            </Link>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\nexport default Navbar;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        \n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Welcome to Splits</b> \n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              Have your own customized workout available in a click of a button\n            </p>\n            <br />\n            <div className=\"row\" style={{justifyContent:\"center\"}}>\n\n            \n            <div className=\"\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                Log In\n              </Link>\n            </div>\n            </div>\n          </div>\n        \n      </div>\n    );\n  }\n}\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link, withRouter} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        errors: {}\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n        this.setState({\n            errors: nextProps.errors\n        });\n        }\n    }\n\n    componentDidMount() {\n        // If logged in and user navigates to Register page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\");\n        }\n      }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n        this.props.registerUser(newUser, this.props.history); \n    };\n\n\n    render() {\n        const { errors } = this.state;\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col s6 offset-s4\">\n                <Link to=\"/\" className=\"btn-flat waves-effect\">\n                <i className=\"material-icons left\">keyboard_backspace</i> Back to\n                home\n                </Link>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <h4>\n                    <b>Register</b> below\n                </h4>\n                <p className=\"grey-text text-darken-1\">\n                    Already have an account? <Link to=\"/login\">Log in</Link>\n                </p>\n                </div>\n                <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <input\n                    onChange={this.onChange}\n                    value={this.state.name}\n                    error={errors.name}\n                    id=\"name\"\n                    type=\"text\"\n                    className={classnames(\"\", {\n                        invalid: errors.name\n                    })}\n                    />\n                    <label htmlFor=\"name\">Name</label>\n                    <span className=\"red-text\">{errors.name}</span>\n                </div>\n                <div className=\"input-field col s12\">\n                    <input\n                    onChange={this.onChange}\n                    value={this.state.email}\n                    error={errors.email}\n                    id=\"email\"\n                    type=\"email\"\n                    className={classnames(\"\", {\n                        invalid: errors.email\n                    })}\n                    />\n                    <label htmlFor=\"email\">Email</label>\n                    <span className=\"red-text\">{errors.email}</span>\n                </div>\n                <div className=\"input-field col s12\">\n                    <input\n                    onChange={this.onChange}\n                    value={this.state.password}\n                    error={errors.password}\n                    id=\"password\"\n                    type=\"password\"\n                    className={classnames(\"\", {\n                        invalid: errors.password\n                    })}\n                    />\n                    <label htmlFor=\"password\">Password</label>\n                    <span className=\"red-text\">{errors.password}</span>\n                </div>\n                <div className=\"input-field col s12\">\n                    <input\n                    onChange={this.onChange}\n                    value={this.state.password2}\n                    error={errors.password2}\n                    id=\"password2\"\n                    type=\"password\"\n                    className={classnames(\"\", {\n                        invalid: errors.password2\n                    })}\n                    />\n                    <label htmlFor=\"password2\">Confirm Password</label>\n                    <span className=\"red-text\">{errors.password2}</span>\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                    style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                    }}\n                    type=\"submit\"\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                    Sign up\n                    </button>\n                </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n  });\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n  )(withRouter(Register));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\nif (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n}\n\ncomponentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n}\n\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\n    const userData = {\n          email: this.state.email,\n          password: this.state.password\n        };\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n};\nrender() {\n    const { errors } = this.state;\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './navbar.css';\nexport default class Navbar extends Component {\n\n  render() {\n    return (\n      <div>\n\n      \n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n      \n        <div className=\"collpase navbar-collapse\" > \n        <div className=\"navbar-nav mr-auto\">\n        \n        <div className=\"row\" style={{justifyContent:\"center\"}}>\n        <p className=\"navbar-item\">\n          <Link to=\"/dashboard/workout\" className=\"nav-link\">View Today's Workout</Link>\n          </p>\n          \n          <p className=\"navbar-item\">\n          <Link to=\"/dashboard/switch\" className=\"nav-link\">Choose Split</Link>\n          </p>\n        </div>\n          \n        </div>\n        </div>\n      </nav>\n      </div>\n    );\n  }\n}\n//className=\"navbar navbar-dark bg-dark navbar-expand-lg\"","import React, {Component} from 'react';\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Workout extends Component {\n    constructor(props) {\n        super(props);\n        let _isMounted = false;\n        this.state = {\n          user:this.props.user,\n          split:'',\n          workoutId: '',\n          workout:{},\n          isLoading:true,\n        }\n        console.log(this.state.user);\n    }\n\n    componentDidMount() {\n      this._isMounted = true;\n      const { user } = this.props.auth;\n\n      \n      axios.post('/api/users/workout', user)\n      .then(res => {\n        //console.log(res.data);\n        if(res.status == 200 && this._isMounted == true){\n            let split = res.data._id;\n            this.setState({\n              split : split,\n            })\n            let workout;\n            switch (new Date().getDay()) {\n              case 0:\n                break;\n              case 1:\n                //day = \"Monday\";\n                if (split == 'ppl'){\n                  workout = 'push1';\n                }\n                else if (split =='upper/lower'){\n                  workout = 'upper1';\n                }\n                else if(split == 'full'){\n                  workout = 'full1';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n                })\n                break;\n              case 2:\n                //day = \"Tuesday\";\n                if (split == 'ppl'){\n                  workout = 'pull1';\n                }\n                else if (split =='upper/lower'){\n                  workout = 'lower1';\n                }\n                else if(split == 'full'){\n                  workout = '';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n                })\n                break;\n              case 3:\n                //day = \"Wednesday\";\n                if (split == 'ppl'){\n                  workout = 'leg1';\n                }\n                else if (split =='upper/lower'){\n                  workout = '';\n                }\n                else if(split == 'full'){\n                  workout = '';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n                })\n                break;\n              case 4:\n                //day = \"Thursday\";\n                if (split == 'ppl'){\n                  workout = 'push2';\n                }\n                else if (split =='upper/lower'){\n                  workout = 'upper2';\n                }\n                else if(split == 'full'){\n                  workout = 'full2';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n              })\n                break;\n              case 5:\n                //day = \"Friday\";\n                if (split == 'ppl'){\n                  workout = 'pull2';\n                }\n                else if (split =='upper/lower'){\n                  workout = 'lower2';\n                }\n                else if(split == 'full'){\n                  workout = '';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n              })\n                break;\n              case 6:\n                //day = \"Saturday\";\n                if (split == 'ppl'){\n                  workout = 'leg1';\n                }\n                else if (split =='upper/lower'){\n                  workout = '';\n                }\n                else if(split == 'full'){\n                  workout = '';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n                })\n              }\n\n              this.setState({\n                isLoading:false,\n              })\n\n            //console.log(res)\n          }else{\n            console.log(\"Unmounted\");\n          }\n      })\n    }\n\n    componentWillUnmount() {\n        \n      this._isMounted=false\n      \n    }\n\n    render() {\n        const { user } = this.props.auth;\n        if(this.state.workoutId == ''){\n          return (\n          <div style={{textAlign:\"center\"}}>\n            <h1>REST DAY</h1>\n          </div>\n          )\n        }else{\n          return (\n\n            <div style={{textAlign:\"center\"}}>\n              <h1>{this.state.split} - {this.state.workoutId}</h1>\n              <pre>{JSON.stringify(this.state.workout, null, 2) }</pre>\n            </div>\n          )\n        }\n    }\n    \n}\nWorkout.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps\n)(Workout);","import React, {Component} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Change extends Component {\n    constructor(props) {\n        \n        super(props);\n        let _isMounted = false;\n        \n        \n        this.state = {\n            user:this.props.user,\n          isMounted:false,\n          split:'',\n          isLoading:true,\n        }\n        console.log(this.state.user);\n        this.handleClick = this.handleClick.bind(this);\n        //console.log(\"Email : \" + this.state.user.email);\n    }\n\n\n    componentDidMount(){\n        this._isMounted = true;\n        \n        console.log(this.state.user);\n        axios.post('/api/users/switch2', this.state.user)\n        .then(res => {\n            if(res.status = 200 && this._isMounted){\n                this.setState({\n                    split:res.data.split,\n                    isLoading:false,\n                })\n            }else{\n                console.log(\"Unable to qeury data\");\n            }\n        })\n    }\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    handleClick(split,e) {\n        e.preventDefault();\n        \n        axios.post('/api/users/switch', {user:this.state.user, split: split})\n        .then(res => {\n            if(res.status = 200 && this._isMounted){\n                this.setState({\n                    split:res.data.split,\n                })\n                //alert(\"Successfully changed splits!\");\n                console.log(this.state.split);\n                \n            }else{\n                console.log(\"Unable to change split\");\n            }\n        })\n        \n    }\n    \n    render() {\n        return(\n            <div>\n            <h1 style={{textAlign:\"center\"}}>Current split : {this.state.split}</h1>\n            \n            <div className='row' style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n                <button onClick={(e) => this.handleClick('ppl', e)} href='/'>Push-Pull-Legs</button>\n                <button onClick={(e) => this.handleClick('upper/lower', e)} href='/'>Upper - Lower</button>\n                <button onClick={(e) => this.handleClick('full', e)} href='/'>Full Body</button>\n                \n            </div>\n            </div>\n            \n\n        );\n    }\n}\nChange.propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  export default connect(\n    mapStateToProps\n  )(Change);\n/*\n<a onClick={this.handleClick('ppl')}>Push-Pull-Legs</a>\n                <a onClick={this.handleClick('upper/lower')}>Upper - Lower</a>\n                <a onClick={this.handleClick('full')}>Full Body</a>*/","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbar from \"./navbar.component\";\nimport Workout from \"./workout.component\";\nimport Change from \"./change.component\";\nimport { BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\nrender() {\n    const { user } = this.props.auth;\n    //console.log(user);\nreturn (\n  /*\n  <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"landing-copy col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                You are logged into a full-stack{\" \"}\n                <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\n              </p>\n            </h4>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n    */\n  \n      <Router>\n        <div style={{ height: \"75vh\", display:\"block\" }} className=\"container valign-wrapper\">\n          <Navbar />\n          <Route exact path=\"/dashboard\">\n                  <Redirect to=\"/dashboard/workout\" />\n          </Route>\n          <Route \n              path=\"/dashboard/workout\" \n              render={(props) => <Workout {...props} user={user} />}\n          />\n          <Route \n              path=\"/dashboard/switch\" \n              render={(props) => <Change {...props} user={user}/>}\n          />\n                  \n        \n          \n          \n              <button\n                style={{\n                  width: \"150px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\",\n                  marginTop: \"1rem\",\n                  marginLeft:\"auto\",\n                  marginRight:\"auto\",\n                  display:\"block\"\n                }}\n                onClick={this.onLogoutClick}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Logout\n              </button>\n            </div>\n        </Router>\n        \n    );\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n/*\n    import HomePage from \"./components/OldComponents/homepage.component\";\nimport SignIn from \"./components/OldComponents/signin.component\";\nimport SignUp from \"./components/OldComponents/signup.component\";\n    <Router>\n      <Route exact path=\"/\" component={SignIn} />\n      <Route path=\"/home\" component={HomePage} />\n      <Route path=\"/signup\" component={SignUp} />\n    </Router>*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}