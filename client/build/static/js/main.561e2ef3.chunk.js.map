{"version":3,"sources":["components/navbar.component.js","components/signin.component.js","components/signup.component.js","components/workout.component.js","components/change.component.js","components/homepage.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","style","color","justifyContent","to","Component","SignUp","props","onChangeUsername","bind","onSubmit","onChangePassword","state","email","password","loggedin","user","e","this","setState","target","value","preventDefault","axios","post","then","res","status","pathname","textAlign","type","width","marginLeft","marginRight","required","username","onChange","signup","Workout","split","workoutId","workout","isLoading","console","log","_isMounted","data","_id","Date","getDay","JSON","stringify","Switch","isMounted","handleClick","display","alignItems","onClick","href","HomePage","location","exact","path","render","App","component","SignIn","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.561e2ef3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './navbar.css';\nexport default class Navbar extends Component {\n\n  render() {\n    return (\n      <div>\n\n      \n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n      \n        <div className=\"collpase navbar-collapse\" > \n        <div className=\"navbar-nav mr-auto\">\n        <h1 style={{color:\"white\"}}>Splits</h1>\n        <div className=\"row\" style={{justifyContent:\"center\"}}>\n        <p className=\"navbar-item\">\n          <Link to=\"/home/workout\" className=\"nav-link\">View Today's Workout</Link>\n          </p>\n          \n          <p className=\"navbar-item\">\n          <Link to=\"/home/switch\" className=\"nav-link\">Choose Split</Link>\n          </p>\n        </div>\n          \n        </div>\n        </div>\n      </nav>\n      </div>\n    );\n  }\n}\n//className=\"navbar navbar-dark bg-dark navbar-expand-lg\"","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect, Link } from 'react-router-dom';\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      loggedin : false,\n      user:{},\n    }\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      email: e.target.value\n    })\n  }\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    //console.log(user);\n\n    axios.post('https://splits-app.herokuapp.com/User/signin', user)\n      .then(res => {\n        //console.log(res.data);\n        if(res.status == 200){\n            this.setState({\n                loggedin : true,\n            })\n        }\n      }\n        \n    );\n      // If signin, login and go to homepage\n\n    this.setState({\n      email: '',\n      password: '',\n      user : user,\n      \n    })\n  }\n\n  render() {\n      if(this.state.loggedin){\n          return(\n            <Redirect to={{\n                pathname:'/home',\n                state: {user : this.state.user}\n            }}\n            />\n          )\n      }else{\n        return (\n        \n            <div style={{textAlign:\"center\", justifyContent:\"center\"}}>\n              <h3>Sign In</h3>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\"> \n                  <label>Username: </label>\n                  <input  type=\"text\"\n                      style={{width:\"50%\", marginLeft:\"auto\", marginRight:\"auto\"}}\n                      required\n                      className=\"form-control\"\n                      value={this.state.username}\n                      onChange={this.onChangeUsername}\n                      />\n                  <label>Password: </label>\n                  <input  type=\"password\"\n                      style={{width:\"50%\", marginLeft:\"auto\", marginRight:\"auto\"}}\n                      required\n                      className=\"form-control\"\n                      value={this.state.password}\n                      onChange={this.onChangePassword}\n                      />\n                </div>\n                <div className=\"row\" style={{textAlign:\"center\", justifyContent:\"center\"}}>\n                    <div className=\"form-group\" style={{marginRight:\"5px\"}}>\n                    <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary\" />\n                    </div>\n                    <div className=\"form-group\" style={{marginLeft:\"5px\"}}>\n                    <Link to=\"/signup\" className=\"btn btn-primary\">Sign Up</Link>\n                    </div>\n                </div>\n              </form>\n            </div>\n          )\n        }\n      \n    \n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      signup : false,\n    }\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      email: e.target.value\n    })\n  }\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const user = {\n      email: this.state.email,\n      password: this.state.password,\n\n    }\n\n    //console.log(user) if this logs, it will expose pass\n\n    axios.post('https://splits-app.herokuapp.com/User/signup', user)\n      .then(res => {\n          //console.log(res.data);\n          if(res.status == 200){\n              this.setState({\n                  signup:true,\n              })\n          }\n      });\n      // If signup, login and go to homepage\n\n    this.setState({\n      email: '',\n      password: '',\n      \n      \n    })\n  }\n\n  render() {\n      if(this.state.signup){\n          return(\n              <Redirect to=\"/\" />\n          )\n      }else{\n        return (\n        <div style={{textAlign:\"center\", justifyContent:\"center\"}}>\n            <h3>Create New User</h3>\n            <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\"> \n                <label>Username: </label>\n                <input  type=\"text\"\n                    style={{width:\"50%\", marginLeft:\"auto\", marginRight:\"auto\"}}\n                    required\n                    className=\"form-control\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    />\n                <label>Password: </label>\n                <input  type=\"text\"\n                    style={{width:\"50%\", marginLeft:\"auto\", marginRight:\"auto\"}}\n                    required\n                    className=\"form-control\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    />\n            </div>\n            <div className=\"form-group\">\n                <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\n            </div>\n            </form>\n        </div>\n        )\n      }\n  }\n}","import React, {Component} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport axios from 'axios'\nimport Navbar from \"./navbar.component\";\nimport SignIn from \"./signin.component\";\nimport SignUp from \"./signup.component\";\n\nexport default class Workout extends Component {\n    constructor(props) {\n        super(props);\n        let _isMounted = false;\n        this.state = {\n          user:this.props.user,\n          split:'',\n          workoutId: '',\n          workout:{},\n          isLoading:true,\n        }\n        console.log(\"Email : \" + this.state.user.email);\n    }\n\n    componentDidMount() {\n      this._isMounted = true;\n\n      \n      axios.post('https://splits-app.herokuapp.com/User/workout', this.state.user)\n      .then(res => {\n        //console.log(res.data);\n        if(res.status == 200 && this._isMounted == true){\n            let split = res.data._id;\n            this.setState({\n              split : split,\n            })\n            let workout;\n            switch (new Date().getDay()) {\n              case 0:\n                break;\n              case 1:\n                //day = \"Monday\";\n                if (split == 'ppl'){\n                  workout = 'push1';\n                }\n                else if (split =='upper/lower'){\n                  workout = 'upper1';\n                }\n                else if(split == 'full'){\n                  workout = 'full1';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n                })\n                break;\n              case 2:\n                //day = \"Tuesday\";\n                if (split == 'ppl'){\n                  workout = 'pull1';\n                }\n                else if (split =='upper/lower'){\n                  workout = 'lower1';\n                }\n                else if(split == 'full'){\n                  workout = '';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n                })\n                break;\n              case 3:\n                //day = \"Wednesday\";\n                if (split == 'ppl'){\n                  workout = 'leg1';\n                }\n                else if (split =='upper/lower'){\n                  workout = '';\n                }\n                else if(split == 'full'){\n                  workout = '';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n                })\n                break;\n              case 4:\n                //day = \"Thursday\";\n                if (split == 'ppl'){\n                  workout = 'push2';\n                }\n                else if (split =='upper/lower'){\n                  workout = 'upper2';\n                }\n                else if(split == 'full'){\n                  workout = 'full2';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n              })\n                break;\n              case 5:\n                //day = \"Friday\";\n                if (split == 'ppl'){\n                  workout = 'pull2';\n                }\n                else if (split =='upper/lower'){\n                  workout = 'lower2';\n                }\n                else if(split == 'full'){\n                  workout = '';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n              })\n                break;\n              case 6:\n                //day = \"Saturday\";\n                if (split == 'ppl'){\n                  workout = 'leg1';\n                }\n                else if (split =='upper/lower'){\n                  workout = '';\n                }\n                else if(split == 'full'){\n                  workout = '';\n                }\n                this.setState({\n                  workout : res.data[split][workout],\n                  workoutId : workout,\n                })\n              }\n\n              this.setState({\n                isLoading:false,\n              })\n\n            //console.log(res)\n          }else{\n            console.log(\"Unmounted\");\n          }\n      })\n    }\n\n    componentWillUnmount() {\n        \n      this._isMounted=false\n      \n    }\n\n    render() {\n        if(this.state.workoutId == ''){\n          return (\n          <div style={{textAlign:\"center\"}}>\n            <h1>REST DAY</h1>\n          </div>\n          )\n        }else{\n          return (\n\n            <div style={{textAlign:\"center\"}}>\n              <h1>{this.state.split} - {this.state.workoutId}</h1>\n              <pre>{JSON.stringify(this.state.workout, null, 2) }</pre>\n            </div>\n          )\n        }\n    }\n}","import React, {Component} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport axios from 'axios'\nimport Navbar from \"./navbar.component\";\nimport SignIn from \"./signin.component\";\nimport SignUp from \"./signup.component\";\n\nexport default class Switch extends Component {\n    constructor(props) {\n        super(props);\n        let _isMounted = false;\n        this.state = {\n          user:this.props.user,\n          isMounted:false,\n          split:'',\n          isLoading:true,\n        }\n        this.handleClick = this.handleClick.bind(this);\n        //console.log(\"Email : \" + this.state.user.email);\n    }\n\n\n    componentDidMount(){\n        this._isMounted = true;\n        axios.post('https://splits-app.herokuapp.com/User/switch2', this.state.user)\n        .then(res => {\n            if(res.status = 200 && this._isMounted){\n                this.setState({\n                    split:res.data.split,\n                    isLoading:false,\n                })\n            }else{\n                console.log(\"Unable to qeury data\");\n            }\n        })\n    }\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    handleClick(split,e) {\n        e.preventDefault();\n        axios.post('https://splits-app.herokuapp.com/User/switch', {user:this.state.user, split: split})\n        .then(res => {\n            if(res.status = 200 && this._isMounted){\n                this.setState({\n                    split:res.data.split,\n                })\n                //alert(\"Successfully changed splits!\");\n                \n                \n            }else{\n                console.log(\"Unable to change split\");\n            }\n        })\n        \n    }\n    \n    render() {\n        return(\n            <div>\n            <h1 style={{textAlign:\"center\"}}>Current split : {this.state.split}</h1>\n            \n            <div className='row' style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n                <button onClick={(e) => this.handleClick('ppl', e)} href='/'>Push-Pull-Legs</button>\n                <button onClick={(e) => this.handleClick('upper/lower', e)} href='/'>Upper - Lower</button>\n                <button onClick={(e) => this.handleClick('full', e)} href='/'>Full Body</button>\n                \n            </div>\n            </div>\n            \n\n        );\n    }\n}\n/*\n<a onClick={this.handleClick('ppl')}>Push-Pull-Legs</a>\n                <a onClick={this.handleClick('upper/lower')}>Upper - Lower</a>\n                <a onClick={this.handleClick('full')}>Full Body</a>*/","import React, {Component} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\n\nimport Navbar from \"./navbar.component\";\nimport SignIn from \"./signin.component\";\nimport SignUp from \"./signup.component\";\nimport Workout from \"./workout.component\";\nimport Switch from \"./change.component\";\nexport default class HomePage extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          user:this.props.location.state.user,\n          split:this.props.location.state.user.split,\n          \n        }\n        console.log(this.state.user.email);\n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"container\">\n                <Navbar />\n                <br/>\n                <Route exact path=\"/home\">\n                        <Redirect to=\"/home/workout\" />\n                </Route>\n                <Route \n                    path=\"/home/workout\" \n                    render={(props) => <Workout {...props} user={this.state.user} />}\n                />\n                <Route \n                    path=\"/home/switch\" \n                    render={(props) => <Switch {...props} user={this.state.user}/>}\n                />\n                </div>\n            </Router>\n        )\n    }\n}\n    ","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport HomePage from \"./components/homepage.component\";\nimport SignIn from \"./components/signin.component\";\nimport SignUp from \"./components/signup.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={SignIn} />\n      <Route path=\"/home\" component={HomePage} />\n      <Route path=\"/signup\" component={SignUp} />\n    </Router>\n    \n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}