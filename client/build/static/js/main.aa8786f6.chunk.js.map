{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/private-route/PrivateRoute.js","components/dashboard/Navbar.js","components/dashboard/Workout.js","components/dashboard/Choose.js","components/dashboard/Dashboard.js","components/auth/SignUp.js","components/auth/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Navbar","className","to","style","fontFamily","Component","connect","component","rest","render","props","classes","makeStyles","root","flexGrow","backgroundColor","marginBottom","link","textDecoration","useStyles","Paper","Tabs","indicatorColor","textColor","centered","value","Tab","label","Workout","split","workoutId","workout","isLoading","this","_isMounted","weekday","Date","getDay","post","then","res","status","data","setState","console","log","textAlign","workoutList","name","hasOwnProperty","push","key","toUpperCase","Choose","isMounted","handleClick","bind","e","preventDefault","display","alignItems","justifyContent","onClick","href","Dashboard","onLogoutClick","Container","maxWidth","marginTop","exact","path","width","borderRadius","letterSpacing","marginLeft","marginRight","Copyright","Typography","variant","color","align","getFullYear","theme","paper","spacing","flexDirection","avatar","margin","palette","secondary","main","form","submit","input","borderBottom","registerUser","userData","history","catch","err","response","withRouter","React","useState","email","setEmail","password","setPassword","password2","setPassword2","setName","setError","onSubmit","newUser","useEffect","CssBaseline","Avatar","noValidate","Grid","container","item","xs","TextField","autoComplete","required","fullWidth","id","autoFocus","error","helperText","onChange","target","inputProps","Button","justify","Box","mt","loginUser","setItem","jwt_decode","emailnotfound","passwordincorrect","jwtToken","currentTime","now","exp","location","App","SignIn","SignUp","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aa8786f6.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const GET_WORKOUT = \"GET_WORKOUT\";","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n        compose\n    )\n  );\nexport default store;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 brand-logo center black-text\"\n            >\n              Splits\n            </Link>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\nexport default Navbar;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nexport default function Navbar() {\n  const useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n      backgroundColor: '#303030',\n      marginBottom: '20px',\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  });\n  const classes = useStyles();\n  return (\n      <Paper className={classes.root}>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          centered\n          value={0}\n        >\n          <Link to=\"/dashboard/workout\"><Tab value={0} className={classes.link} label=\"View Today's Workout\"/></Link>\n          <Link to=\"/dashboard/switch\"><Tab value={1} className={classes.link} label=\"Choose Split\"/></Link>\n        </Tabs>\n      </Paper>\n  );\n}\n","import React, {Component} from 'react';\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Workout extends Component {\n    constructor(props) {\n        super(props);\n        // let _isMounted = false;\n        this.state = {\n          user:this.props.user,\n          split:'',\n          workoutId: '',\n          workout:{},\n          isLoading:true,\n        }\n        //console.log(this.state.user);\n    }\n\n    componentDidMount() {\n      this._isMounted = true;\n      const { user } = this.props.auth;\n      let today = new Date();\n      let weekday = today.getDay();\n\n      \n      axios.post('/api/users/workout', {user:user, weekday:weekday})\n      .then(res => {\n        //console.log(res.data);\n        if(res.status === 200 && this._isMounted){\n          // console.log(\"weekday = \"+res.data.weekday);\n          if(res.data.workoutId === \"\"){\n            this.setState({\n              workoutId : \"\", \n              isLoading:false,\n            })\n          }else{\n            this.setState({\n              split : res.data.split,\n              workoutId : res.data.workoutId,\n              workout:res.data.workout,\n              isLoading:false,\n            })\n          }\n        }else{\n          console.log(\"Unmounted\");\n        }\n      })\n    }\n\n    componentWillUnmount() {\n      this._isMounted=false\n    }\n\n    render() {\n        if(this.state.isLoading){\n          return (\n            <div style={{textAlign:\"center\"}}>\n              <h1>Loading...</h1>\n            </div>\n          );\n        }\n        else if(this.state.workoutId === ''){\n          return (\n          <div style={{textAlign:\"center\"}}>\n            <h1>REST DAY</h1>\n          </div>\n          )\n        }else{\n          const workoutList = [];\n          for (const name in this.state.workout) {\n            if (this.state.workout.hasOwnProperty(name)) {\n                // console.log(name + \" -> \" + this.state.workout[name]);\n                workoutList.push(<li key={name}>{name} : {this.state.workout[name]}</li>)\n            }\n          }\n          return (\n            <div style={{textAlign:\"center\"}}>\n              <h3>{this.state.split.toUpperCase()} - {this.state.workoutId.toUpperCase()}</h3>\n              <ul>\n                {workoutList}\n              </ul>\n            </div>\n          )\n        }\n    }\n    \n}\nWorkout.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps\n)(Workout);","import React, {Component} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Choose extends Component {\n    constructor(props) {\n        \n        super(props);\n        // let _isMounted = false;\n        this.state = {\n            user:this.props.user,\n            isMounted:false,\n            split:'',\n            isLoading:true,\n        }\n        //console.log(this.state.user);\n        this.handleClick = this.handleClick.bind(this);\n        //console.log(\"Email : \" + this.state.user.email);\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n        \n        //console.log(this.state.user);\n        axios.post('/api/users/getSplit', this.state.user)\n        .then(res => {\n            if(res.status === 200 && this._isMounted){\n                this.setState({\n                    split:res.data.split,\n                    isLoading:false,\n                })\n            }else{\n                console.log(\"Unable to qeury data\");\n            }\n        })\n    }\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    handleClick(split,e) {\n        e.preventDefault();\n        \n        axios.post('/api/users/switch', {user:this.state.user, split: split})\n        .then(res => {\n            if(res.status === 200 && this._isMounted){\n                this.setState({\n                    split:res.data.split,\n                })\n                //alert(\"Successfully changed splits!\");\n                console.log(this.state.split);\n                \n            }else{\n                console.log(\"Unable to change split\");\n            }\n        })\n        \n    }\n    \n    render() {\n        return(\n            <div>\n            <h1 style={{textAlign:\"center\"}}>Current split : {this.state.isLoading? \"Loading...\" : this.state.split}</h1>\n            \n            <div className='row' style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n                <button onClick={(e) => this.handleClick('ppl', e)} href='/'>Push-Pull-Legs</button>\n                <button onClick={(e) => this.handleClick('upper/lower', e)} href='/'>Upper - Lower</button>\n                <button onClick={(e) => this.handleClick('full', e)} href='/'>Full Body</button>\n                \n            </div>\n            </div>\n            \n\n        );\n    }\n}\nChoose.propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  export default connect(\n    mapStateToProps\n  )(Choose);\n/*\n<a onClick={this.handleClick('ppl')}>Push-Pull-Legs</a>\n                <a onClick={this.handleClick('upper/lower')}>Upper - Lower</a>\n                <a onClick={this.handleClick('full')}>Full Body</a>*/","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbar from \"./Navbar\";\nimport Workout from \"./Workout\";\nimport Choose from \"./Choose\";\nimport { BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\nrender() {\n    const { user } = this.props.auth;\n    return (\n      <Router>\n        <Container maxWidth='sm' style={{display:'block', marginTop:'64px'}}>\n          <Navbar />\n          <Route exact path=\"/dashboard\">\n                  <Redirect to=\"/dashboard/workout\" />\n          </Route>\n          <Route \n              path=\"/dashboard/workout\" \n              render={(props) => <Workout {...props} user={user} />}\n          />\n          <Route \n              path=\"/dashboard/switch\" \n              render={(props) => <Choose {...props} user={user}/>}\n          />\n          <button\n            style={{\n              width: \"150px\",\n              borderRadius: \"3px\",\n              letterSpacing: \"1.5px\",\n              marginTop: \"1rem\",\n              marginLeft:\"auto\",\n              marginRight:\"auto\",\n              display:\"block\"\n            }}\n            onClick={this.onLogoutClick}\n            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n          >\n            Logout\n          </button>\n        </Container>\n      </Router>\n    );\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);","import React, { useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link, withRouter} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}   \n        Splits{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  input: {\n    borderBottom: 'none !important',\n  },\n}));\n\nexport function SignUp(props) {\n  const classes = useStyles();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [password2, setPassword2] = React.useState('');\n  const [name, setName] = React.useState('');\n  const [errors, setError] = React.useState({});\n\n  useEffect(() => {\n    if (props.auth.isAuthenticated) {\n      props.history.push(\"/dashboard\");\n    }\n    if (props.errors) {\n      setError(props.errors);\n      console.log(props.errors);\n    }\n  }, [props]);\n\n  function onSubmit(e) {\n      e.preventDefault();\n      const newUser = {\n        name: name,\n        email: email,\n        password: password,\n        password2: password2\n    };\n    props.registerUser(newUser, props.history); \n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Full Name\"\n                autoFocus\n                error={errors.name != null}\n                helperText={errors.name}\n                onChange={e => setName(e.target.value)}\n                inputProps={{\n                  className: classes.input\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                error={errors.email != null}\n                helperText={errors.email}\n                onChange={e => setEmail(e.target.value)}\n                inputProps={{\n                  className: classes.input\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                error={errors.password != null}\n                helperText={errors.password}\n                onChange={e => setPassword(e.target.value)}\n                inputProps={{\n                  className: classes.input\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password2\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"password2\"\n                autoComplete=\"current-password\"\n                error={errors.password2 != null}\n                helperText={errors.password2}\n                onChange={e => setPassword2(e.target.value)}\n                inputProps={{\n                  className: classes.input\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onSubmit={onSubmit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to='/' variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nSignUp.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(SignUp));","import React, {useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport {Link} from 'react-router-dom';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}    \n        Splits{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport function SignIn(props) {\n  const classes = useStyles();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [errors, setError] = React.useState({});\n  useEffect(() => {\n    if (props.auth.isAuthenticated) {\n      props.history.push(\"/dashboard\");\n    }\n    if (props.errors) {\n      setError(props.errors);\n      // console.log(props.errors);\n    }\n  }, [props]);\n\n  function onSubmit(e) {\n      e.preventDefault();\n      const userData = {\n            email: email,\n            password: password,\n          };\n      props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            error={errors.email != null || errors.emailnotfound != null}\n            helperText={errors.email || errors.emailnotfound}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            error={errors.password != null || errors.passwordincorrect}\n            helperText={errors.password || errors.passwordincorrect}\n            onChange={e => setPassword(e.target.value)}\n            inputProps={{\n              className: classes.input\n            }}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nSignIn.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(SignIn);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Navbar from \"./components/layout/Navbar\";\n// import Landing from \"./components/layout/Landing\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport SignUp from './components/auth/SignUp';\nimport SignIn from './components/auth/SignIn';\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={SignIn} />\n            <Route exact path=\"/register\" component={SignUp} />\n            <Switch>\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n/*\n    import HomePage from \"./components/OldComponents/homepage.component\";\nimport SignIn from \"./components/OldComponents/signin.component\";\nimport SignUp from \"./components/OldComponents/signup.component\";\n    <Router>\n      <Route exact path=\"/\" component={SignIn} />\n      <Route path=\"/home\" component={HomePage} />\n      <Route path=\"/signup\" component={SignUp} />\n    </Router>*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}